{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport nextButton from '@/components/buttons/next-button.vue';\nimport { UseQuizStore } from \"../store.js\";\nimport optionLine from \"@/components/option-line.vue\";\nexport default {\n  name: 'quiz-page',\n  data() {\n    return {\n      QuizStore: UseQuizStore(),\n      quiz: {},\n      image: null,\n      selectedOption: null\n    };\n  },\n  components: {\n    optionLine,\n    nextButton\n  },\n  beforeMount() {\n    this.laodQuiz();\n  },\n  methods: {\n    SelectedOption(key) {\n      this.selectedOption = key;\n      this.nextQuesiton();\n    },\n    nextQuesiton() {\n      if (this.selectedOption === this.quiz.answer) {\n        this.QuizStore.userScore += 1;\n        console.log(\"user score update!\", this.QuizStore.userScore);\n      }\n      this.quiz.played = true;\n      if (this.currentQuizID < Object.keys(this.QuizStore.quiz).length) {\n        console.log(\"going\");\n        this.$router.push({\n          name: 'quizPage',\n          params: {\n            num: String(Number(this.currentQuizID) + 1)\n          }\n        });\n        this.currentQuizID += 1;\n        this.laodQuiz();\n      } else {\n        this.$router.push({\n          name: 'resultPage'\n        });\n      }\n    },\n    laodQuiz() {\n      this.quiz = this.QuizStore.quiz[this.currentQuizID];\n      console.log(\"index loading\", this.currentQuizID);\n      console.log(\"quizz loaded\", this.quiz);\n    }\n  },\n  computed: {\n    currentQuizID() {\n      return this.$route.params.num;\n    }\n  }\n};","map":{"version":3,"names":["nextButton","UseQuizStore","optionLine","name","data","QuizStore","quiz","image","selectedOption","components","beforeMount","laodQuiz","methods","SelectedOption","key","nextQuesiton","answer","userScore","console","log","played","currentQuizID","Object","keys","length","$router","push","params","num","String","Number","computed","$route"],"sources":["/Users/abdelmadjidbelhanafi/Documents/vsc project/carQuiz/car-quiz/src/views/solution.vue"],"sourcesContent":["<template>\n    <div class=\"quiz\">\n        <p class=\"question-counter\" >\n            QUESTION \n            <span>{{ $route.params.num }}/{{ Object.keys(QuizStore.quiz).length }}</span>\n        </p>\n        <div class=\"quizz-media\">\n            <img class=\"\" :src=\"quiz.media\" alt=\"car head light\">\n        </div>\n        <div class=\"options\">\n            <optionLine   style=\"text-align: left;\" >\n                <template #Key >{{  quiz.questions[quiz.answer] }}</template>\n                <template #OptionText >{{  quiz.question[quiz.answer] }}</template>\n            </optionLine>\n        </div>\n        <div class=\"button-holder\">\n            <nextButton @click=\"$router.push({ name: 'quizPage', params: { num: Number(1) } })\">\n                <template #Text>NEXT!</template>\n            </nextButton>\n        </div>\n        <div style=\"width: 100%;height: 30px;background-color: gray;\" >\n        </div>\n\n    </div>\n</template>\n<script>\nimport nextButton from '@/components/buttons/next-button.vue';\nimport {UseQuizStore} from \"../store.js\"\nimport optionLine from \"@/components/option-line.vue\"\nexport default{\n    name : 'quiz-page',\n    data(){\n        return {\n            QuizStore : UseQuizStore(),\n            quiz : {},\n            image : null,\n            selectedOption : null,\n        }\n    },\n    components : {\n        optionLine,\n        nextButton\n    },\n    beforeMount(){\n\n        this.laodQuiz()\n    },\n    methods : {\n        SelectedOption(key){\n            this.selectedOption = key;\n            this.nextQuesiton() \n        },\n        nextQuesiton(){\n            if(this.selectedOption === this.quiz.answer){\n                this.QuizStore.userScore += 1; \n                console.log(\"user score update!\",this.QuizStore.userScore);\n            }\n\n            this.quiz.played = true;\n\n            if(this.currentQuizID < Object.keys(this.QuizStore.quiz).length){\n                console.log(\"going\")\n\n                this.$router.push({name : 'quizPage' , params : { num : String(Number(this.currentQuizID) +1)  }  })\n                this.currentQuizID += 1;\n                this.laodQuiz();\n            }else{\n                this.$router.push({name : 'resultPage'})\n            }\n        },\n        laodQuiz(){\n            this.quiz = this.QuizStore.quiz[this.currentQuizID];\n            console.log(\"index loading\",this.currentQuizID)\n            console.log(\"quizz loaded\",this.quiz)\n        }\n    },\n    computed: {\n        currentQuizID() {\n            return this.$route.params.num\n        }\n    }\n}\n</script>\n<style scoped>\n.button-holder{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.question-counter{\n    font-weight: 500;\n    text-align: center;\n    font-size: 20px;\n\n    color: #f3f3f3;\n}\n.question-counter span{\n    color : var(--yellow);\n}\n.quiz{\n\n    grid-column: 2/3;\n\n    height: 100vh;\n\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: min-content min-content 1fr 1fr min-content;\n    gap: 5px;\n    padding: 15px;\n    box-sizing: border-box;\n\n    place-items: center;\n}\n.quizz-media{\n    position: relative;\n    overflow: hidden;\n\n    width: 100%;\n    height: 30vh;\n\n}\n.quizz-media img{\n    position: absolute;\n\n     height: 100%;\n     width: auto;\n\n    left: 50%;\n    top: 0;\n    transform: translateX(-50%);\n}\n.quiz .options{\n    width: 100%;\n\n    display: flex;\n    flex-direction: column;\n    align-items: space-between;\n    justify-content: center;\n\n    gap: 10px;\n}\n@media only screen and (max-width: 700px) {\n    .quizz-media img {\n        height: 100%;\n     width: auto;\n    }\n}\n</style>"],"mappings":";AA0BA,OAAOA,UAAS,MAAO,sCAAsC;AAC7D,SAAQC,YAAY,QAAO,aAAY;AACvC,OAAOC,UAAS,MAAO,8BAA6B;AACpD,eAAc;EACVC,IAAG,EAAI,WAAW;EAClBC,IAAIA,CAAA,EAAE;IACF,OAAO;MACHC,SAAQ,EAAIJ,YAAY,CAAC,CAAC;MAC1BK,IAAG,EAAI,CAAC,CAAC;MACTC,KAAI,EAAI,IAAI;MACZC,cAAa,EAAI;IACrB;EACJ,CAAC;EACDC,UAAS,EAAI;IACTP,UAAU;IACVF;EACJ,CAAC;EACDU,WAAWA,CAAA,EAAE;IAET,IAAI,CAACC,QAAQ,CAAC;EAClB,CAAC;EACDC,OAAM,EAAI;IACNC,cAAcA,CAACC,GAAG,EAAC;MACf,IAAI,CAACN,cAAa,GAAIM,GAAG;MACzB,IAAI,CAACC,YAAY,CAAC;IACtB,CAAC;IACDA,YAAYA,CAAA,EAAE;MACV,IAAG,IAAI,CAACP,cAAa,KAAM,IAAI,CAACF,IAAI,CAACU,MAAM,EAAC;QACxC,IAAI,CAACX,SAAS,CAACY,SAAQ,IAAK,CAAC;QAC7BC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAC,IAAI,CAACd,SAAS,CAACY,SAAS,CAAC;MAC9D;MAEA,IAAI,CAACX,IAAI,CAACc,MAAK,GAAI,IAAI;MAEvB,IAAG,IAAI,CAACC,aAAY,GAAIC,MAAM,CAACC,IAAI,CAAC,IAAI,CAAClB,SAAS,CAACC,IAAI,CAAC,CAACkB,MAAM,EAAC;QAC5DN,OAAO,CAACC,GAAG,CAAC,OAAO;QAEnB,IAAI,CAACM,OAAO,CAACC,IAAI,CAAC;UAACvB,IAAG,EAAI,UAAS;UAAIwB,MAAK,EAAI;YAAEC,GAAE,EAAIC,MAAM,CAACC,MAAM,CAAC,IAAI,CAACT,aAAa,IAAG,CAAC;UAAG;QAAG,CAAC;QACnG,IAAI,CAACA,aAAY,IAAK,CAAC;QACvB,IAAI,CAACV,QAAQ,CAAC,CAAC;MACnB,CAAC,MAAI;QACD,IAAI,CAACc,OAAO,CAACC,IAAI,CAAC;UAACvB,IAAG,EAAI;QAAY,CAAC;MAC3C;IACJ,CAAC;IACDQ,QAAQA,CAAA,EAAE;MACN,IAAI,CAACL,IAAG,GAAI,IAAI,CAACD,SAAS,CAACC,IAAI,CAAC,IAAI,CAACe,aAAa,CAAC;MACnDH,OAAO,CAACC,GAAG,CAAC,eAAe,EAAC,IAAI,CAACE,aAAa;MAC9CH,OAAO,CAACC,GAAG,CAAC,cAAc,EAAC,IAAI,CAACb,IAAI;IACxC;EACJ,CAAC;EACDyB,QAAQ,EAAE;IACNV,aAAaA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACW,MAAM,CAACL,MAAM,CAACC,GAAE;IAChC;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}