{"ast":null,"code":"import { UseQuizStore } from \"../store.js\";\nimport timerBar from \"@/components/timer-bar.vue\";\nimport optionLine from \"@/components/option-line.vue\";\nexport default {\n  name: 'quiz-page',\n  data() {\n    return {\n      QuizStore: UseQuizStore(),\n      quiz: {},\n      image: null\n      // image : require('@/assets/images/' + this.$route.params.num + '.png')\n    };\n  },\n  components: {\n    timerBar,\n    optionLine\n  },\n  beforeMount() {\n    this.quiz = this.QuizStore.quiz[this.$route.params.num];\n    console.log(this.quiz);\n  },\n  methods: {\n    SelectedOption(key) {\n      console.log(\"selected\", key);\n    }\n  }\n};","map":{"version":3,"names":["UseQuizStore","timerBar","optionLine","name","data","QuizStore","quiz","image","components","beforeMount","$route","params","num","console","log","methods","SelectedOption","key"],"sources":["/Users/abdelmadjidbelhanafi/Documents/vsc project/carQuiz/car-quiz/src/views/quiz.vue"],"sourcesContent":["<template>\n    <div class=\"quiz\">\n        <timerBar @timer-end=\"console.log('end timer')\" ></timerBar>\n        <p class=\"question-counter\" >\n            QUESTION \n            <span>{{ $route.params.num }}/{{ Object.keys(QuizStore.quiz).length }}</span>\n        </p>\n        <div class=\"quizz-media\">\n            <img class=\"\" :src=\"quiz.media\" alt=\"car head light\">\n        </div>\n        <div class=\"options\">\n            <optionLine  @click=\"SelectedOption(key)\" v-for=\"question , key  in quiz.questions\" :key=\"key\"  style=\"text-align: left;\" >\n                <template #Key >{{  key }}</template>\n                <template #OptionText >{{ question }}</template>\n            </optionLine>\n        </div>\n        <div style=\"width: 100%;height: 30px;background-color: gray;\" >\n        </div>\n\n    </div>\n</template>\n<script>\nimport {UseQuizStore} from \"../store.js\"\nimport timerBar from \"@/components/timer-bar.vue\"\nimport optionLine from \"@/components/option-line.vue\"\nexport default{\n    name : 'quiz-page',\n    data(){\n        return {\n            QuizStore : UseQuizStore(),\n            quiz : {},\n            image : null,\n            // image : require('@/assets/images/' + this.$route.params.num + '.png')\n        }\n    },\n    components : {\n        timerBar,\n        optionLine\n    },\n    beforeMount(){\n        this.quiz = this.QuizStore.quiz[this.$route.params.num];\n\n        console.log(this.quiz);\n        \n    },\n    methods : {\n        SelectedOption(key){\n            console.log(\"selected\",key)\n        }\n    }\n    \n    \n}\n</script>\n<style scoped>\n.question-counter{\n    font-weight: 500;\n    text-align: center;\n    font-size: 20px;\n\n    color: #f3f3f3;\n}\n.question-counter span{\n    color : var(--yellow);\n}\n.quiz{\n\n    grid-column: 2/3;\n\n    height: 100vh;\n\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: min-content min-content 1fr 1fr min-content;\n    gap: 5px;\n    padding: 15px;\n    box-sizing: border-box;\n\n    place-items: center;\n}\n.quizz-media{\n    position: relative;\n    overflow: hidden;\n\n    width: 100%;\n    height: 30vh;\n\n}\n.quizz-media img{\n    position: absolute;\n\n     height: 100%;\n     width: auto;\n\n    left: 50%;\n    top: 0;\n    transform: translateX(-50%);\n}\n.quiz .options{\n    width: 100%;\n\n    display: flex;\n    flex-direction: column;\n    align-items: space-between;\n    justify-content: center;\n\n    gap: 10px;\n}\n@media only screen and (max-width: 700px) {\n\n}\n</style>"],"mappings":"AAsBA,SAAQA,YAAY,QAAO,aAAY;AACvC,OAAOC,QAAO,MAAO,4BAA2B;AAChD,OAAOC,UAAS,MAAO,8BAA6B;AACpD,eAAc;EACVC,IAAG,EAAI,WAAW;EAClBC,IAAIA,CAAA,EAAE;IACF,OAAO;MACHC,SAAQ,EAAIL,YAAY,CAAC,CAAC;MAC1BM,IAAG,EAAI,CAAC,CAAC;MACTC,KAAI,EAAI;MACR;IACJ;EACJ,CAAC;EACDC,UAAS,EAAI;IACTP,QAAQ;IACRC;EACJ,CAAC;EACDO,WAAWA,CAAA,EAAE;IACT,IAAI,CAACH,IAAG,GAAI,IAAI,CAACD,SAAS,CAACC,IAAI,CAAC,IAAI,CAACI,MAAM,CAACC,MAAM,CAACC,GAAG,CAAC;IAEvDC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,IAAI,CAAC;EAE1B,CAAC;EACDS,OAAM,EAAI;IACNC,cAAcA,CAACC,GAAG,EAAC;MACfJ,OAAO,CAACC,GAAG,CAAC,UAAU,EAACG,GAAG;IAC9B;EACJ;AAGJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}