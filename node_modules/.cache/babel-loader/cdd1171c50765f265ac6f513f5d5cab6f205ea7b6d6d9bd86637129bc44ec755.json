{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-956d9286\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"quiz\"\n};\nconst _hoisted_2 = {\n  class: \"question-counter\"\n};\nconst _hoisted_3 = {\n  class: \"quizz-media\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"options\"\n};\nconst _hoisted_6 = {\n  class: \"button-holder\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"30px\",\n    \"background-color\": \"gray\"\n  }\n}, null, -1));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_optionLine = _resolveComponent(\"optionLine\");\n  const _component_nextButton = _resolveComponent(\"nextButton\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"p\", _hoisted_2, [_createTextVNode(\" QUESTION \"), _createElementVNode(\"span\", null, _toDisplayString(_ctx.$route.params.num) + \"/\" + _toDisplayString(Object.keys($data.QuizStore.quiz).length), 1)]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n    class: \"\",\n    src: require('../assets/images/' + _ctx.$route.params.num + '_s.png'),\n    alt: \"car head light\"\n  }, null, 8, _hoisted_4)]), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_optionLine, {\n    style: {\n      \"text-align\": \"left\"\n    }\n  }, {\n    Key: _withCtx(() => [_createTextVNode(_toDisplayString($data.quiz.answer), 1)]),\n    OptionText: _withCtx(() => [_createTextVNode(_toDisplayString($data.quiz.questions[$data.quiz.answer]), 1)]),\n    _: 1\n  })]), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_nextButton, {\n    onClick: $options.nextQuesiton\n  }, {\n    Text: _withCtx(() => [_createTextVNode(\"NEXT!\")]),\n    _: 1\n  }, 8, [\"onClick\"])]), _hoisted_7]);\n}","map":{"version":3,"names":["class","_createElementVNode","style","_createElementBlock","_hoisted_1","_hoisted_2","_createTextVNode","_toDisplayString","_ctx","$route","params","num","Object","keys","$data","QuizStore","quiz","length","_hoisted_3","src","require","alt","_hoisted_4","_hoisted_5","_createVNode","_component_optionLine","Key","_withCtx","answer","OptionText","questions","_","_hoisted_6","_component_nextButton","onClick","$options","nextQuesiton","Text","_hoisted_7"],"sources":["/Users/abdelmadjidbelhanafi/Documents/vsc project/carQuiz/car-quiz/src/views/solution.vue"],"sourcesContent":["<template>\n    <div class=\"quiz\">\n        <p class=\"question-counter\" >\n            QUESTION \n            <span>{{ $route.params.num }}/{{ Object.keys(QuizStore.quiz).length }}</span>\n        </p>\n        <div class=\"quizz-media\">\n            <img class=\"\" :src=\"require('../assets/images/' + $route.params.num+ '_s.png')\" alt=\"car head light\">\n        </div>\n        <div class=\"options\">\n            <optionLine   style=\"text-align: left;\" >\n                <template #Key >{{  quiz.answer }}</template>\n                <template #OptionText >{{  quiz.questions[quiz.answer] }}</template>\n            </optionLine>\n        </div>\n        <div class=\"button-holder\">\n            <nextButton @click=\"nextQuesiton\">\n                <template #Text>NEXT!</template>\n            </nextButton>\n        </div>\n        <div style=\"width: 100%;height: 30px;background-color: gray;\" >\n        </div>\n\n    </div>\n</template>\n<script>\nimport nextButton from '@/components/buttons/next-button.vue';\nimport {UseQuizStore} from \"../store.js\"\nimport optionLine from \"@/components/option-line.vue\"\nexport default{\n    name : 'quiz-page',\n    data(){\n        return {\n            QuizStore : UseQuizStore(),\n            quiz : {},\n            image : null,\n            selectedOption : null,\n        }\n    },\n    components : {\n        optionLine,\n        nextButton\n    },\n    beforeMount(){\n\n        this.laodQuiz()\n    },\n    methods : {\n        SelectedOption(key){\n            this.selectedOption = key;\n            this.nextQuesiton() \n        },\n        nextQuesiton(){\n            if(this.currentQuizID < Object.keys(this.QuizStore.quiz).length){\n                this.$router.push({name : 'quizPage' , params : { num : String(Number(this.currentQuizID) +1 )  }  })\n            }else{\n                this.$router.push({name : 'resultPage'})\n            }\n        },\n        laodQuiz(){\n            this.quiz = this.QuizStore.quiz[this.currentQuizID];\n            console.log(\"index loading\",this.currentQuizID)\n            console.log(\"quizz loaded\",this.quiz)\n        }\n    },\n    computed: {\n        currentQuizID() {\n            return this.$route.params.num\n        }\n    }\n}\n</script>\n<style scoped>\n.button-holder{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.question-counter{\n    font-weight: 500;\n    text-align: center;\n    font-size: 20px;\n\n    color: #f3f3f3;\n}\n.question-counter span{\n    color : var(--yellow);\n}\n.quiz{\n\n    grid-column: 2/3;\n\n    height: 100vh;\n\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: min-content  1fr 1fr min-content;\n    gap: 5px;\n    padding: 15px;\n    box-sizing: border-box;\n\n    place-items: center;\n}\n.quizz-media{\n    position: relative;\n    overflow: hidden;\n\n    width: 100%;\n    height: 30vh;\n\n}\n.quizz-media img{\n    position: absolute;\n\n     height: 100%;\n     width: auto;\n\n    left: 50%;\n    top: 0;\n    transform: translateX(-50%);\n}\n.quiz .options{\n    width: 100%;\n\n    display: flex;\n    flex-direction: column;\n    align-items: space-between;\n    justify-content: center;\n\n    gap: 10px;\n}\n@media only screen and (max-width: 700px) {\n    .quizz-media img {\n        height: 100%;\n     width: auto;\n    }\n}\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAkB;;EAItBA,KAAK,EAAC;AAAa;mBANhC;;EASaA,KAAK,EAAC;AAAS;;EAMfA,KAAK,EAAC;AAAe;gEAK1BC,mBAAA,CACM;EADDC,KAAwD,EAAxD;IAAA;IAAA;IAAA;EAAA;AAAwD;;;;uBAnBjEC,mBAAA,CAsBM,OAtBNC,UAsBM,GArBFH,mBAAA,CAGI,KAHJI,UAGI,GALZC,gBAAA,CAEqC,YAEzB,GAAAL,mBAAA,CAA6E,cAAAM,gBAAA,CAApEC,IAAA,CAAAC,MAAM,CAACC,MAAM,CAACC,GAAG,IAAG,GAAC,GAAAJ,gBAAA,CAAGK,MAAM,CAACC,IAAI,CAACC,KAAA,CAAAC,SAAS,CAACC,IAAI,EAAEC,MAAM,M,GAEvEhB,mBAAA,CAEM,OAFNiB,UAEM,GADFjB,mBAAA,CAAqG;IAAhGD,KAAK,EAAC,EAAE;IAAEmB,GAAG,EAAEC,OAAO,uBAAuBZ,IAAA,CAAAC,MAAM,CAACC,MAAM,CAACC,GAAG;IAAaU,GAAG,EAAC;cAPhGC,UAAA,E,GASQrB,mBAAA,CAKM,OALNsB,UAKM,GAJFC,YAAA,CAGaC,qBAAA;IAHCvB,KAAyB,EAAzB;MAAA;IAAA;EAAyB;IACxBwB,GAAG,EAAAC,QAAA,CAAE,MAAkB,CAXlDrB,gBAAA,CAAAC,gBAAA,CAWoCO,KAAA,CAAAE,IAAI,CAACY,MAAM,M;IACpBC,UAAU,EAAAF,QAAA,CAAE,MAAkC,CAZzErB,gBAAA,CAAAC,gBAAA,CAY2CO,KAAA,CAAAE,IAAI,CAACc,SAAS,CAAChB,KAAA,CAAAE,IAAI,CAACY,MAAM,O;IAZrEG,CAAA;QAeQ9B,mBAAA,CAIM,OAJN+B,UAIM,GAHFR,YAAA,CAEaS,qBAAA;IAFAC,OAAK,EAAEC,QAAA,CAAAC;EAAY;IACjBC,IAAI,EAAAV,QAAA,CAAC,MAAK,CAjBrCrB,gBAAA,CAiBgC,OAAK,E;IAjBrCyB,CAAA;wBAoBQO,UACM,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}